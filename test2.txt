void main()
{
    // ADDITION
    int sum;
    sum = 35 + 400;
    cout << sum; // 435

    // SUBTRACTION
    int diff = sum - 100; // INLINE VARIABLE DECLARATION
    // diff = sum - 100;
    cout << diff; // 335

    // MULTIPLICATION
    int prod;
    prod = sum * diff;
    cout << prod; // 145725

    // DIVISION
    int quot;
    quot = prod / 5;
    cout << quot; // 29145

    // IF/ELSE
    if (quot >= 1000)
    {
        cout << 1; // This should print
    }
    else
    {
        cout << 0; // This should not print
    }

    // WHILE LOOP
    int counter;
    counter = 0;

    while (counter < 3)
    {
        cout << counter; // 0 1 2
        counter = counter + 1;
    }
    cout << endl;


    // REPEAT LOOP
    repeat(3){
        cout << 4;
    }
    cout << endl;

    // FOR LOOP
    for (int s = 0; s < 5; s += 1) {
        cout << s;
    }
    cout << endl;

    // NESTED IF STATEMENTS
    if(counter < 10){
        if(quot >= 1000){
            cout << 5;
            counter = 0;
        }
    }

    // END LINE
    cout << endl;

    // MOD OPERATION
    int mod;
    mod = 11 % 2;
    cout << mod << endl; // CHAINED COUT

    cout << 4 << 8 << 15 << endl << endl << 16 << 23 << endl << 42 << endl; // CHAINED COUT
    
    // PLUS EQUALS
    int plus = 0;
    plus += 5;
    cout << plus << endl;

    // SUBTRACTION EQUALS
    int sub = 0;
    sub -= 5;
    cout << sub << endl;

    // TEST
    int x = 5;
    int y = 6;

    while (x < 10){ // runs 5 times
        x += 1;
        cout << x;
        if (y > 4){ // true statement for 2 iterations of the loop 
            y -= 1; 
        }
    }
    cout << y; // should output 4

    // RELATIONAL OPERATORS
    int a = 3;
    int b = 5;
    cout << (a < b)   << endl;  // 1
    cout << (a > b)   << endl;  // 0
    cout << (a <= b)  << endl;  // 1
    cout << (a >= b)  << endl;  // 0
    cout << (a == b)  << endl;  // 0
    cout << (a != b)  << endl;  // 1

    // LOGICAL OPERATORS
    int p = 1;
    int q = 0;
    cout << (p && q)  << endl;  // 0
    cout << (p || q)  << endl;  // 1
    cout << (p && p)  << endl;  // 1
    cout << (q || q)  << endl;  // 0

    // NESTED REPEAT LOOPS 
    int r = 1;
    repeat(2) {
        repeat(3){
          cout << r;
          r = r + 1;
        }
    }
    cout << endl;

    // NULL STATEMENTS & BLOCKS
    int z = 0;;
    {
        ;;                  // two null statements
        z = z + 1;
    }
    cout << z << endl;    // 1

    // NOT EQUALS IN IF ELSE
    int pants = 11;
    if (pants != 11){
      cout << 220 << endl;
    } else {
      cout << 440 << endl;
    }
    
    int m = 10;
    if (m != 10) {
        m += 5;
    } else {
        m -= 3;
    }
    cout << m << endl;    // m was 10, so now 7


    int i = 0;
    do {
        cout << i;
        i += 1;
    } while (i <= 5);
    cout << endl;

    x = 11;
    if (x > 10 && x < 20){
        do {
            x += 1;
            i += 1;
            cout << 43;
        } while (i < 55)
    }

    // FINAL PRINT
    cout << endl;


    /* FINAL OUTPUT:
    435 335 145725 29145 1 0 1 2 3 4 4 4 5
    1 
    4 8 15 
    
    16 23
    42 
    5
    -5
    6 7 8 9 10 4 1
    0
    1
    0
    0
    1
    0
    1
    1
    0
    1 2 3 4 5 6
    1
    440
    7
    0 1 2 3 4 5
    */
}